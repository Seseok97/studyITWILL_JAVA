package array_;

public class Ex2_0228_array {

	public static void main(String[] args) {
		/*
		 * <배열 선언, 생성, 초기화를 한번에 수행하는 문법>
		 * 데이터타입[] 변수명 = {데이터1, 데이터2, 데이터3 ... 데이터n};
		 * > 배열 크기 생성 문법을 별도로 명시하지 않고, 중괄호를 사용한다.
		 * > 초기화할 데이터를 리터럴형태로 전달하면 해당 데이터 개수만큼 배열공간이 자동으로 생성된다.
		 * > n개만큼의 공간 생성 > 인덱스번호 0~n-1까지 부여되고, 기본값으로 자동 초기화 된다.
		 */
		
		int[] arr = new int[5];
		arr[0] = 1;
		arr[1] = 2;
		arr[2] = 3;
		arr[3] = 4;
		arr[4] = 5;
		
		// 위의 문장들을 하나로 결합하여 리터럴로 즉시 초기화 수행
		int[] arr2 = {1,2,3,4,5};
		//주의! 5개의 리터럴 저장시 5개의 데이터 저장공간만 생성되므로, 추가적인 데이터저장은 불가능하다.
		// 보통 크기가 정해져있는 배열에 사용됨.
		
		//배열 arr의 모든요소 출력
		for(int i=0;i<arr2.length;i++) {
			System.out.println(arr[i]);
		}
		System.out.println("-------------------------");
		//int형 배열 arr2를 먼저 선언 한 후
		//별도로 정수형 리터럴 1,2,3,4,5로 한꺼번에 초기화 하는 경우
		int[] arr3;
//		arr3 = new int[5];  // 배열생성 문장 사용시
//		arr3 = {1,2,3,4,5}; // err, Array constants can only be used in initializers
							//  별도로 초기화 시 사용이 불가능하다 !!
		arr3 = new int[]{1,2,3,4,5};
//		arr3 = new int[5]{1,2,3,4,5}; //err, 배열크기 지정하지 않는다!
		
		System.out.println("-----------------------------");
		//String 타입 문자열 데이터 3개("JAVA","JSP","CLOUD")를 저장하는 배열 strArr을 생성하고,
		// 리터럴로 즉시 초기화까지 수행 후 출력
		String[] strArr = {"JAVA","JSP","CLOUD"};
		for(int i=0;i<strArr.length;i++) {
			System.out.println(strArr[i]);
		}
		
		System.out.println("=================================");
		
		int[] a= {1,2,3};
		int[] b= {4,5,6};
		int[] c= {7,8,9};
		
		a = b; // b가 가진 주소값을 a에 저장한다.
		// 기존의 a가 가르키던(참조하던) 1,2,3의 저장공간을 버리고, b가 가르키는 4,5,6의 저장공간의 주소값을 전달받아 참조하게 된다.
		// 이때, 기존 1,2,3의 저장공간은 더이상 참조되지 않으므로, 불필요한 메모리공간이 되어 Garbage Colletor에 의해 정리 대상이 된다.
		// 즉, 더이상 필요없는 메모리 공간은 자동으로 정리된다.
		
		b = c; // c가 가진 주소값을 b에 저장한다.
		// 기존 b의 4,5,6 저장공간을 버리고, c가 가리키는 7,8,9의 주소값을 전달받아 참조하게 된다.
		// 이 때, 기존 4,5,6 저장공간은 a가 참조하고있기 때문에, Garbage Collector에 의한 정리대상이 아니다.
		
		
		
		
		
		
		

	}

}
